// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM4K.hdl

/**
 * Memory of 4K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM4K {
    IN in[16], load, address[12];
    OUT out[16];

    PARTS:
        DMux8Way(in=true,sel=address[9..11],a=r0,b=r1,c=r2,d=r3,e=r4,f=r5,g=r6,h=r7);
    And(a=r0,b=load,out=load0);
    And(a=r1,b=load,out=load1);
    And(a=r2,b=load,out=load2);
    And(a=r3,b=load,out=load3);
    And(a=r4,b=load,out=load4);
    And(a=r5,b=load,out=load5);
    And(a=r6,b=load,out=load6);
    And(a=r7,b=load,out=load7);
    RAM512(in=in,load=load0,address=address[0..8],out=reg0);
    RAM512(in=in,load=load1,address=address[0..8],out=reg1);
    RAM512(in=in,load=load2,address=address[0..8],out=reg2);
    RAM512(in=in,load=load3,address=address[0..8],out=reg3);
    RAM512(in=in,load=load4,address=address[0..8],out=reg4);
    RAM512(in=in,load=load5,address=address[0..8],out=reg5);
    RAM512(in=in,load=load6,address=address[0..8],out=reg6);
    RAM512(in=in,load=load7,address=address[0..8],out=reg7);

    Mux8Way16(a=reg0,b=reg1,c=reg2,d=reg3,e=reg4,f=reg5,g=reg6,h=reg7,sel=address[9..11],out=out);
}